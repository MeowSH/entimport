// Code generated by entimport, DO NOT EDIT.

package schema

import (
	"entgo.io/ent"
	"entgo.io/ent/schema"
	"entgo.io/ent/schema/field"
)

type FieldType struct {
	ent.Schema
}

func (FieldType) Fields() []ent.Field {
	return []ent.Field{field.Int("id"), field.Int("int"), field.Int8("int8"), field.Int16("int16"), field.Int32("int32"), field.Int("int64"), field.Int("optional_int").Optional(), field.Int8("optional_int8").Optional(), field.Int16("optional_int16").Optional(), field.Int32("optional_int32").Optional(), field.Int("optional_int64").Optional(), field.Int("nillable_int").Optional(), field.Int8("nillable_int8").Optional(), field.Int16("nillable_int16").Optional(), field.Int32("nillable_int32").Optional(), field.Int("nillable_int64").Optional(), field.Int32("validate_optional_int32").Optional(), field.Uint64("optional_uint").Optional(), field.Uint8("optional_uint8").Optional(), field.Uint16("optional_uint16").Optional(), field.Uint32("optional_uint32").Optional(), field.Uint64("optional_uint64").Optional(), field.Enum("state").Optional().Values("on", "off"), field.Float32("optional_float").Optional(), field.Float32("optional_float32").Optional(), field.Time("datetime").Optional(), field.String("link_other").Optional(), field.String("mac").Optional(), field.String("password").Optional(), field.String("string_scanner").Optional(), field.Int("duration").Optional(), field.String("dir"), field.String("ndir").Optional(), field.String("str").Optional(), field.String("null_str").Optional(), field.String("link").Optional(), field.String("null_link").Optional(), field.Bool("active").Optional(), field.Bool("null_active").Optional(), field.Bool("deleted").Optional(), field.Time("deleted_at").Optional(), field.Int("null_int64").Optional(), field.Int("schema_int").Optional(), field.Int8("schema_int8").Optional(), field.Int("schema_int64").Optional(), field.Float32("schema_float").Optional(), field.Float32("schema_float32").Optional(), field.Float32("null_float").Optional(), field.Enum("role").Values("ADMIN", "OWNER", "USER", "READ", "WRITE"), field.Enum("priority").Optional().Values("UNKNOWN", "LOW", "HIGH"), field.String("uuid").Optional(), field.String("nillable_uuid").Optional(), field.String("vstring"), field.String("triple"), field.Int("big_int").Optional(), field.String("password_other").Optional(), field.Int("file_field").Optional()}
}
func (FieldType) Edges() []ent.Edge {
	return nil
}
func (FieldType) Annotations() []schema.Annotation {
	return nil
}
